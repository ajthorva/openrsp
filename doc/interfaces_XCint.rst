

XCint
=====

XCint is the library/module that provides XC contributions to (perturbed) KS matrices
as well as expectation value type XC contributions.


The interface in short
----------------------

XCint needs some information about the molecule and basis on files interface_ao
and interface_mo. It needs a grid on file numerical_grid.  Via subroutine calls
one can calculate (perturbed) KS matrices as well as expectation value type XC
contributions (geometric derivatives).  XCint calculates everything in AO
basis. XCint always needs the unperturbed density matrix. In addition, for the
calculation of perturbed KS matrices it needs corresponding perturbed density
matrices.  XCint needs some information about the point group symmetry and
hermiticity of the perturbed density matrices.  It will typically integrate on
top of one or more matrices or array(s) which are allocated outside XCint.  It
needs to know the order of geometric derivatives and London magnetic
derivatives.


Bindings
--------

So far only Fortran.


XCFun
-----

XCint obtains XC functional derivatives using the XCFun library of Ulf Ekstr√∂m
and coworkers. The XCint-XCFun interface is hidden to the OpenRSP library.


How to link
-----------

We recommend that you build libxcint.a separately (see installation
instructions) and link your application against it.


Setting the XC functional
-------------------------

The following minimal code will set the LDA XC functional::

  character(80) :: line

  line = 'lda'
  call xcint_parse_functional(line)


Numerical grid
--------------

XCint does not generate the numerical grid but assumes that the numerical grid
has been generated by whatever means and that it is on a free-format formatted
file called "numerical_grid".

File "numerical_grid" contains one or several batches of points. Each point
fills one line with x-, y-, z-coordinates and the weight. The file closes with
a negative integer. Example (fantasy grid consisting of 2 batches with 4
points each, each has weight 1.0)::

  4
  1.0  1.0  1.0  1.0
  2.0  2.0  2.0  1.0
  3.0  3.0  3.0  1.0
  4.0  4.0  4.0  1.0
  4
  5.0  5.0  5.0  1.0
  6.0  6.0  6.0  1.0
  7.0  7.0  7.0  1.0
  8.0  8.0  8.0  1.0
  -1


Basis set and molecular orbital information
-------------------------------------------

XCint needs a number of basis set (AO) and molecular orbital (MO) information
(both required). This information is read from free-format formatted files
called "interface_ao" and "interface_mo". Your code needs to generate these
files.

Minimal example (H2O in STO-3G basis):

interface_ao::

  *** geometry
      nr_centers
           3
      charges_and_coordinates
           8.000         0.000         0.000        -0.224
           1.000         1.452         0.000         0.899
           1.000        -1.452         0.000         0.899
  *** basis
      is_spherical
           F
      algebra
           1
      use_only_large
           T
      nr_primitive_exp
          15
      # cent   L/S shell     l          prim          coef
           1     L     1     0    0.1307E+03    0.4251E+01
           1     L     1     0    0.2380E+02    0.4112E+01
           1     L     1     0    0.6443E+01    0.1281E+01
           1     L     2     0    0.5033E+01   -0.2394E+00
           1     L     2     0    0.1169E+01    0.3202E+00
           1     L     2     0    0.3803E+00    0.2416E+00
           1     L     3     1    0.5033E+01    0.1675E+01
           1     L     3     1    0.1169E+01    0.1053E+01
           1     L     3     1    0.3803E+00    0.1669E+00
           2     L     4     0    0.3425E+01    0.2769E+00
           2     L     4     0    0.6239E+00    0.2678E+00
           2     L     4     0    0.1688E+00    0.8347E-01
           3     L     5     0    0.3425E+01    0.2769E+00
           3     L     5     0    0.6239E+00    0.2678E+00
           3     L     5     0    0.1688E+00    0.8347E-01

- all coordinates in bohr
- is_spherical "F" means cartesian GTO, "T" means spherical GTO
- use_only_large "T" is what you want outside of the DIRAC code, and all primitives "L"
- coefficients (coef) contain normalization
- algebra: use 1 (means real; 1, 2, 4 is for DIRAC)

interface_mo::

    nr_electrons_inactive_total
        10


Integration, finally
--------------------

This is a minimal example to integrate the XC potential matrix::

  call xcint_potential(nr_ao, dmat, fmat)

The array dmat is the unperturbed AO density matrix with (at least) the
dimensions (nr_ao*nr_ao) allocated and calculated by your code. Also the array
fmat is allocated by your code with (at least) the dimensions (nr_ao*nr_ao).
Note that XCint will integrate on top of fmat and therefore not zero fmat.
